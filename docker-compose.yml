# Update Time: 2023-12-05 12:42
version: "3.4"

services:
  # Traefik反代服务器
  traefik:
    # 网络差时更新版本耗时较长，影响服务访问，因此固定到v2.10.4，需要时再手动升级
    # image: traefik:latest
    image: traefik:v2.10.4
    #以下CLI方式的静态配置，全部改为File静态配置在/etc/traefik/traefik.yml中配置
    #command:
    #- --api.insecure=true # set to 'false' on production
    #- --api.dashboard=true # see https://docs.traefik.io/v2.0/operations/dashboard/#secure-mode for how to secure the dashboard
    #- --api.debug=true # enable additional endpoints for debugging and profiling
    #- --log.level=DEBUG # debug while we get it working, for more levels/info see https://docs.traefik.io/observability/logs/
    #- --providers.docker=true
    #- --providers.docker.swarmMode=true
    #- --providers.docker.exposedbydefault=false
    #- --providers.docker.network=network_cluster
    #- --entryPoints.web.address=:80
    networks: [network_cluster]
    restart: always
    ports:
      # OpenWRT的iptables暂时不支持ingress模式,须使用host模式映射端口才能接收到来自主路由转发的WAN请求
      #- "8000:80" # HTTP
      #- "8443:443" # HTTPS
      #- "8080:8080"  # DashBoard
      #- "8022:8022"  # SSH
      - target: 80
        published: 8000
        protocol: tcp
        mode: host
      - target: 443
        published: 8443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 8090
        published: 8090
        protocol: tcp
        mode: host      
    environment:
      # 直接使用Portainer容器内的环境变量
      ALICLOUD_ACCESS_KEY: ${ALICLOUD_ACCESS_KEY}
      ALICLOUD_SECRET_KEY: ${ALICLOUD_SECRET_KEY}
      ALICLOUD_REGION_ID: ${ALICLOUD_REGION_ID}
      DOMAIN_NAS: ${DOMAIN_NAS}
      DOMAIN_PVE: ${DOMAIN_PVE}
      DOMAIN_SWARM: ${DOMAIN_SWARM}
      TZ: ${TZ}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - nfs_traefik:/etc/traefik
    deploy:
      placement:
        constraints:
          - node.labels.type == router
      #以下Labels方式的动态配置，全部改为File的动态配置在/etc/traefik/dynamic/*.yml中配置
      labels:
      #- "traefik.enable=true"
      # Dashboard配置
      #- "traefik.http.routers.api.rule=Host(`traefik.cloudvalley.name`)"
      #- "traefik.http.routers.api.service=api@internal" # Let the dashboard access the traefik api
      #- "traefik.http.routers.api.entrypoints=websecure" # Let the dashboard access the traefik api
      # Dashboard验证
      #- "traefik.http.routers.api.middlewares=api-auth@docker"
      #- "traefik.http.middlewares.api-auth.basicauth.users=waylon:$$apr1$$QkMu0EI5$$1TjyNCHvtlqrJpk9TFVvc."
      #- "traefik.http.services.dummyService.loadbalancer.server.port=9090"  # 增加了一个负载均衡的端品到taefik的dashboard业务，端口只要是业务没有用的随机的就可以
      # 全局重定向匹配路由规则，这里匹配了所有路由
      #- "traefik.http.routers.http-catchall.rule=HostRegexp(`{any:.+}`)"
      #- "traefik.http.routers.http-catchall.entrypoints=web"
      #- "traefik.http.routers.http-catchall.middlewares=noauth-chain@file"
      #- "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      #- "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
      #- "traefik.http.services.noop.loadbalancer.server.port=9999"
        - homepage.group=Base
        - homepage.name=Traefik
        - homepage.icon=traefik.png
        - homepage.href=https://traefik.${DOMAIN_SWARM}:4/
        - homepage.description=代理服务器
        - homepage.widget.type=traefik
        - homepage.widget.url=https://traefik.${DOMAIN_SWARM}:4    
        - homepage.widget.username=${HOMEPAGE_TRAEFIK_USERNAME}  
        - homepage.widget.password=${HOMEPAGE_TRAEFIK_PASSWORD}    
  # 主页服务
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    networks: [network_cluster]
    restart: on-failure
    volumes:
      - nfs_homepage:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # (optional) For docker integrations
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.homepage.rule=Host(`home.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.homepage.entrypoints=websecure"
        - "traefik.http.routers.homepage.service=homepage"
        - "traefik.http.routers.homepage.middlewares=noauth-chain@file,cors-headers@file"
        - "traefik.http.services.homepage.loadbalancer.server.port=3000"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.type == vm
  # VPN代理服务
  clash:
    image: dreamacro/clash:latest
    networks: [network_cluster]
    restart: on-failure
    volumes:
      - nfs_clash_config:/root/.config/clash
      - nfs_clash_ui:/ui
    ports:
      - 7890:7890
      - 7891:7891      
      - 9090:9090  
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.clash.rule=Host(`clash.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.clash.entrypoints=websecure"
        - "traefik.http.routers.clash.service=clash"
        - "traefik.http.routers.clash.middlewares=noauth-chain@file"
        - "traefik.http.services.clash.loadbalancer.server.port=9090"  
        - homepage.group=Base
        - homepage.name=Clash
        - homepage.icon=clash.png
        - homepage.href=https://clash.${DOMAIN_SWARM}:4/ui
        - homepage.description=VPN代理服务         
        - homepage.siteMonitor=http://clash:9090
        - homepage.weight=4
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.type == vm          

networks:
  network_cluster:
    external: true

x-common-keys-volume: &common-keys-volume
  type: nfs
  o: addr=${NFS_SERVER},rw,nfsvers=4

volumes:
  # 挂载NFS卷，用于Swarm集群node迁移时保持数据
  nfs_traefik:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/public/traefik
  nfs_homepage:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/public/homepage
  nfs_clash_config:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/public/clash/config
  nfs_clash_ui:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/public/clash/ui            